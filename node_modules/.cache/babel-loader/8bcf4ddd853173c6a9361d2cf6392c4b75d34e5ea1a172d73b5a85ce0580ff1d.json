{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"HomePage\",\n  data: () => ({\n    search: \"\",\n    loading: false,\n    items: [],\n    count: 0,\n    requestErro: false\n  }),\n  created() {\n    this.getUsers();\n  },\n  computed: {\n    headers() {\n      return [{\n        text: \"Avatar\",\n        sortable: false,\n        value: \"avatar_url\",\n        align: \"center\",\n        width: \"100px\"\n      }, {\n        text: \"Usuario\",\n        sortable: true,\n        value: \"login\",\n        align: \"left\"\n      }, {\n        text: \"Link\",\n        sortable: false,\n        value: \"html_url\",\n        align: \"left\"\n      }];\n    }\n  },\n  methods: {\n    filterUser(value, search) {\n      return value != null && search != null && typeof value === \"string\" && value.toString().toLowerCase().indexOf(search.toLowerCase()) !== -1;\n    },\n    async getUsers() {\n      this.loading = true;\n      this.requestErro = false;\n      this.users = [];\n      let baseURL = \"https://api.github.com\";\n      try {\n        await axios.get(baseURL + \"/bleh\").then(response => {\n          const data = response.data;\n          console.log(data);\n          this.items = data;\n          this.loading = false;\n        });\n      } catch (error) {\n        // eslint-disable-next-line\n        debugger;\n        console.log(\"error\");\n        this.requestErro = true;\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA0CA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA,QACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QAAAJ;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,EACA;IACA;EACA;EACAE;IACAC;MACA,OACAJ,iBACAV,kBACA,6BACAU;IAEA;IACA;MACA;MACA;MACA;MACA;MACA;QACA;UACA;UACAK;UACA;UACA;QACA;MACA;QACA;QACA;QACAA;QACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","search","loading","items","count","requestErro","created","computed","headers","text","sortable","value","align","width","methods","filterUser","console"],"sourceRoot":"src/pages/Home","sources":["Home.vue"],"sourcesContent":["<template>\n  <div id=\"Home\">\n    <v-card-title class=\"title\">\n      Procura de usuarios\n      <v-spacer></v-spacer>\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"mdi-magnify\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n    </v-card-title>\n    <v-data-table\n      dense\n      :headers=\"headers\"\n      :items=\"items\"\n      item-key=\"login\"\n      class=\"elevation-1 tabela\"\n      :search=\"search\"\n      :custom-filter=\"filterUser\"\n      :loading=\"count !== 0\"\n      loading-text=\"Loading\"\n      :footer-props=\"{\n        'items-per-page-options': [20, 30, 40, 50],\n      }\"\n    >\n      <template v-slot:[`item.avatar_url`]=\"{ item }\">\n        <img class=\"avatar\" :src=\"item.avatar_url\" alt=\"\" />\n      </template>\n      <template v-slot:[`item.html_url`]=\"{ item }\">\n        <a :href=\"item.html_url\">{{ item.html_url }}</a>\n      </template>\n      <template slot=\"no-data\">\n        <v-alert :value=\"true\" color=\"error\"> Nenhum registro encontrado </v-alert>\n        <v-alert :value=\"requestErro\" color=\"error\"> Erro na chamada </v-alert>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"HomePage\",\n  data: () => ({\n    search: \"\",\n    loading: false,\n    items: [],\n    count: 0,\n    requestErro: false,\n  }),\n  created() {\n    this.getUsers();\n  },\n  computed: {\n    headers() {\n      return [\n        {\n          text: \"Avatar\",\n          sortable: false,\n          value: \"avatar_url\",\n          align: \"center\",\n          width: \"100px\",\n        },\n        { text: \"Usuario\", sortable: true, value: \"login\", align: \"left\" },\n        { text: \"Link\", sortable: false, value: \"html_url\", align: \"left\" },\n      ];\n    },\n  },\n  methods: {\n    filterUser(value, search) {\n      return (\n        value != null &&\n        search != null &&\n        typeof value === \"string\" &&\n        value.toString().toLowerCase().indexOf(search.toLowerCase()) !== -1\n      );\n    },\n    async getUsers() {\n      this.loading = true;\n      this.requestErro = false;\n      this.users = [];\n      let baseURL = \"https://api.github.com\";\n      try {\n        await axios.get(baseURL + \"/bleh\").then((response) => {\n          const data = response.data;\n          console.log(data);\n          this.items = data;\n          this.loading = false;\n        });\n      } catch (error) {\n        // eslint-disable-next-line\n        debugger;\n        console.log(\"error\");\n        this.requestErro = true;\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\">\n#Home\n\t.title\n\t\twidth: 60%\n\t\tmargin: 0 auto\n\t.tabela\n\t\twidth: 60%\n\t\tmargin: 0 auto\n\t.avatar\n\t\twidth: 50px\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}