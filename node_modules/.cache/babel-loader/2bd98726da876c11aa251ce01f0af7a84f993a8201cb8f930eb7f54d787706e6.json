{"ast":null,"code":"export default {\n  name: \"HomePage\",\n  data() {\n    return {\n      search: '',\n      calories: '',\n      desserts: [{\n        name: 'Frozen Yogurt',\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        iron: '1%'\n      }, {\n        name: 'Ice cream sandwich',\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        iron: '1%'\n      }, {\n        name: 'Eclair',\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        iron: '7%'\n      }, {\n        name: 'Cupcake',\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        iron: '8%'\n      }]\n    };\n  },\n  computed: {\n    headers() {\n      return [{\n        text: 'Dessert (100g serving)',\n        align: 'start',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'Calories',\n        value: 'calories',\n        filter: value => {\n          if (!this.calories) return true;\n          return value < parseInt(this.calories);\n        }\n      }, {\n        text: 'Fat (g)',\n        value: 'fat'\n      }, {\n        text: 'Carbs (g)',\n        value: 'carbs'\n      }, {\n        text: 'Protein (g)',\n        value: 'protein'\n      }, {\n        text: 'Iron (%)',\n        value: 'iron'\n      }];\n    }\n  },\n  methods: {\n    filterUser(value, search) {\n      return value != null && search != null && typeof value === 'string' && value.toString().indexOf(search) !== -1;\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC,WACA;QACAJ;QACAG;QACAE;QACAC;QACAC;QACAC;MACA,GACA;QACAR;QACAG;QACAE;QACAC;QACAC;QACAC;MACA,GACA;QACAR;QACAG;QACAE;QACAC;QACAC;QACAC;MACA,GACA;QACAR;QACAG;QACAE;QACAC;QACAC;QACAC;MACA;IAEA;EACA;EACAC;IACAC;MACA,QACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAG;QACAC;UACA;UAEA;QACA;MACA,GACA;QAAAJ;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,EACA;IACA;EACA;EACAE;IACAC;MACA,wBACAf,kBACA,6BACAY;IACA;EACA;AACA","names":["name","data","search","calories","desserts","fat","carbs","protein","iron","computed","headers","text","align","sortable","value","filter","methods","filterUser"],"sourceRoot":"src/pages/Home","sources":["Home.vue"],"sourcesContent":["<template>\n\t<div>\n\t\tHome\n\t\t<v-data-table\n      :headers=\"headers\"\n      :items=\"desserts\"\n      item-key=\"name\"\n      class=\"elevation-1\"\n      :search=\"search\"\n      :custom-filter=\"filterUser\"\n    >\n      <template v-slot:top>\n        <v-text-field\n          v-model=\"search\"\n          label=\"Search (UPPER CASE ONLY)\"\n          class=\"mx-4\"\n        ></v-text-field>\n      </template>\n      <!-- <template v-slot:body.append>\n        <tr>\n          <td></td>\n          <td>\n            <v-text-field\n              v-model=\"calories\"\n              type=\"number\"\n              label=\"Less than\"\n            ></v-text-field>\n          </td>\n          <td colspan=\"4\"></td>\n        </tr>\n      </template> -->\n    </v-data-table>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: \"HomePage\",\n\tdata () {\n\t\treturn {\n\t\t\tsearch: '',\n\t\t\tcalories: '',\n\t\t\tdesserts: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Frozen Yogurt',\n\t\t\t\t\tcalories: 159,\n\t\t\t\t\tfat: 6.0,\n\t\t\t\t\tcarbs: 24,\n\t\t\t\t\tprotein: 4.0,\n\t\t\t\t\tiron: '1%',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Ice cream sandwich',\n\t\t\t\t\tcalories: 237,\n\t\t\t\t\tfat: 9.0,\n\t\t\t\t\tcarbs: 37,\n\t\t\t\t\tprotein: 4.3,\n\t\t\t\t\tiron: '1%',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Eclair',\n\t\t\t\t\tcalories: 262,\n\t\t\t\t\tfat: 16.0,\n\t\t\t\t\tcarbs: 23,\n\t\t\t\t\tprotein: 6.0,\n\t\t\t\t\tiron: '7%',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Cupcake',\n\t\t\t\t\tcalories: 305,\n\t\t\t\t\tfat: 3.7,\n\t\t\t\t\tcarbs: 67,\n\t\t\t\t\tprotein: 4.3,\n\t\t\t\t\tiron: '8%',\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\tcomputed: {\n\t\theaders () {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Dessert (100g serving)',\n\t\t\t\t\talign: 'start',\n\t\t\t\t\tsortable: false,\n\t\t\t\t\tvalue: 'name',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: 'Calories',\n\t\t\t\t\tvalue: 'calories',\n\t\t\t\t\tfilter: value => {\n\t\t\t\t\t\tif (!this.calories) return true\n\n\t\t\t\t\t\treturn value < parseInt(this.calories)\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ text: 'Fat (g)', value: 'fat' },\n\t\t\t\t{ text: 'Carbs (g)', value: 'carbs' },\n\t\t\t\t{ text: 'Protein (g)', value: 'protein' },\n\t\t\t\t{ text: 'Iron (%)', value: 'iron' },\n\t\t\t]\n\t\t},\n\t},\n\tmethods: {\n\t\tfilterUser (value, search) {\n\t\t\treturn value != null &&\n\t\t\t\tsearch != null &&\n\t\t\t\ttypeof value === 'string' &&\n\t\t\t\tvalue.toString().indexOf(search) !== -1\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"sass\">\n\t\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}